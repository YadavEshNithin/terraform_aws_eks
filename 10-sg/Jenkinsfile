pipeline {
    agent {
        label "AGENT-1"
    }
    environment {
        // COURSE = "JENKINS"
        appVersion = ""
        REGION="us-east-1"
        ACC_ID="010666226306"
        PROJECT="roboshop"
    }
    options {
        timeout(time: 30, unit: 'MINUTES') 
        disableConcurrentBuilds()
    }
    // parameters {
    //     // string(name: 'PERSON', defaultValue: 'Mr Jenkins NEW', description: 'Who should I say hello to?')
    //     // text(name: 'BIOGRAPHY', defaultValue: 'JB', description: 'Enter some information about the person')
    //     // booleanParam(name: 'TOGGLE', defaultValue: true, description: 'Toggle this value')
    //     // choice(name: 'CHOICE', choices: ['One', 'Two', 'Three'], description: 'Pick something')
    //     // password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'Enter a password') 
    // }
    stages {
        stage('init') {
            steps {
                 withAWS(credentials: 'aws-credds', region: 'us-east-1') {
                 sh """
                    cd 10-sg
                    terraform init -reconfigure
                 """
            }
            }
        }
        stage('plan') {
            steps {
                 withAWS(credentials: 'aws-credds', region: 'us-east-1') {
                 sh """
                    cd 10-sg
                    terraform plan
                 """
            }
            }
        }
        stage('apply') {
            input {
                message "Should we continue?"
                ok "Yes, we should."
                submitter "alice,bob"
            }
            steps {
                 withAWS(credentials: 'aws-credds', region: 'us-east-1') {
                 sh """
                    cd 10-sg
                    terraform apply -auto-approve
                 """
                }
            }
        }
         stage('Bastion EKS ACM ALB') {
            parallel {
                stage('Trigger Bastion') {
                    steps {
                        script {
                            build job: '20-bastion', 
                            propagate: false,  // even SG fails VPC will not be effected
                            wait: false // VPC will not wait for SG pipeline completion
                        }
                    }
                }
                stage('Trigger EKS') {
                    steps {
                        script {
                            build job: '80-eks', 
                            propagate: false,  // even SG fails VPC will not be effected
                            wait: false // VPC will not wait for SG pipeline completion
                        }
                    }
                }
                stage('ACM') {
                    steps {
                        script {
                            build job: '60-acm', 
                            propagate: false,  // even SG fails VPC will not be effected
                            wait: false // VPC will not wait for SG pipeline completion
                        }
                    }  
                }
            }
        }
        stage('Trigger ALB') {
            steps {
                script {
                    build job: '70-frontend-alb', 
                    propagate: false,  // even SG fails VPC will not be effected
                    wait: false // VPC will not wait for SG pipeline completion
                }
            }
        }
    }


    post {
        always {
            echo " always hello"
            deleteDir()
        }
        success {
            echo " success hello"
        }
        failure {
            echo " failure hello"
        }
    }
}